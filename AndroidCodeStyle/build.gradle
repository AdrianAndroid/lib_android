// Top-level build file where you can add configuration options common to all sub-projects/modules.

apply plugin: 'architecture-api'
apply plugin: 'architecture-lint'
apply plugin: 'net.researchgate.release'

apply from: 'architecture.gradle'

buildscript {
    repositories {
        maven { url 'http://repo.yypm.com:8181/nexus/content/groups/public' }
        maven { url uri('repo') }
        google()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.2.0'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "tv.athena:api-gradle-plugin:${architecture_version}"
        classpath 'net.researchgate:gradle-release:2.4.1'
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
    configurations.all {
        resolutionStrategy {
            // check for updates every build
            resolutionStrategy.cacheDynamicVersionsFor 0, 'seconds'
            resolutionStrategy.cacheChangingModulesFor 0, 'seconds'

            force 'android.arch.core:runtime:1.1.0'
        }
    }
}

release {
    failOnUnversionedFiles = false
    failOnUpdateNeeded = false
    buildTasks = []
    //versionPropertyFile = "version.properties"

    git {
        requireBranch = "master|.*_maint"
        pushToRemote = "origin"
    }
}



allprojects {
    repositories {
        maven { url 'http://repo.yypm.com:8181/nexus/content/groups/public' }
        maven { url uri('repo') }
        google()
    }
    group = "${publish_groupId}"
    configurations.all {
        resolutionStrategy {
            // check for updates every build
            resolutionStrategy.cacheDynamicVersionsFor 0, 'seconds'
            resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
        }

        resolutionStrategy {
            force "android.arch.lifecycle:viewmodel:${archLifecycleVersion}"
            force "android.arch.lifecycle:runtime:${archLifecycleVersion}"
            force "android.arch.lifecycle:livedata-core:${archLifecycleVersion}"
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

