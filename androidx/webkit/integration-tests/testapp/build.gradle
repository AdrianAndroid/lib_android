/*
 * Copyright 2018 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import androidx.build.AndroidXPluginKt
import androidx.build.BuildOnServerKt
import androidx.build.BuildServerConfigurationKt

plugins {
    id("AndroidXPlugin")
    id("com.android.application")
}

dependencies {
    implementation("androidx.appcompat:appcompat:1.1.0")
    implementation("androidx.core:core:1.1.0")
    implementation(project(":webkit:webkit"))
    implementation(libs.guavaAndroid)
    implementation(libs.espressoIdlingNet)
    implementation(libs.espressoIdlingResource)

    androidTestImplementation(libs.testExtJunit)
    androidTestImplementation(libs.testCore)
    androidTestImplementation(libs.testRunner)
    androidTestImplementation(libs.testRules)
    androidTestImplementation(libs.espressoCore, excludes.espresso)
    androidTestImplementation(libs.espressoContrib, excludes.espresso)
    androidTestImplementation(libs.espressoIdlingResource)
    androidTestImplementation(libs.espressoWeb, excludes.espresso)
    androidTestImplementation(libs.mockitoCore, excludes.bytebuddy)
    // DexMaker has it"s own MockMaker
    androidTestImplementation(libs.dexmakerMockito, excludes.bytebuddy)
}

// We want to publish a release apk of this project for webkit team's use
def copyReleaseApk = tasks.register("copyReleaseApk", Copy) { task ->
    android.applicationVariants.all { variant ->
        if (variant.buildType.name == "release") {
            task.from(variant.packageApplicationProvider.get().outputDirectory)
        }
    }
    task.include("*.apk")
    task.rename { fileName ->
        "${AndroidXPluginKt.asFilenamePrefix(project.path)}_$fileName"
    }
    task.destinationDir =
            new File(BuildServerConfigurationKt.getDistributionDirectory(project), "apks")
    task.dependsOn(project.path + ":assembleRelease")
}

BuildOnServerKt.addToBuildOnServer(project, copyReleaseApk)

android {
    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 29
    }
    lintOptions {
        disable "UnusedResources"
    }
    buildTypes {
        release {
            minifyEnabled true
        }
    }
}
