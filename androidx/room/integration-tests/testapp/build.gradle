/*
 * Copyright (C) 2017 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

buildscript {
    // TODO: Remove this when this test app no longer depends on 1.0.0 of vectordrawable-animated.
    // vectordrawable and vectordrawable-animated were accidentally using the same package name
    // which is no longer valid in namespaced resource world.
    project.ext["android.uniquePackageNames"] = false
}

plugins {
    id("AndroidXPlugin")
    id("com.android.application")
}

android {
    defaultConfig {
        multiDexEnabled true
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [
                        "room.schemaLocation"  : "$projectDir/schemas".toString(),
                ]
            }
        }
    }
    buildFeatures {
        aidl = true
    }
    sourceSets {
        androidTest.assets.srcDirs += files("$projectDir/schemas".toString())
        androidTest.assets.srcDirs += files("$projectDir/databases".toString())
    }
// TODO re-enable flavors when b/153917176 is fixed
//    flavorDimensions "processorConfiguration"
//    productFlavors {
//        withExpandProjection {
//            dimension "processorConfiguration"
//            javaCompileOptions {
//                annotationProcessorOptions {
//                    arguments = [
//                            "room.schemaLocation"  : "$projectDir/schemas".toString(),
//                            "room.expandProjection"  : "true"
//                    ]
//                }
//            }
//        }
//        withoutExpandProjection {
//            dimension "processorConfiguration"
//            javaCompileOptions {
//                annotationProcessorOptions {
//                    arguments = [
//                            "room.schemaLocation"  : "$projectDir/schemas".toString(),
//                            "room.expandProjection"  : "false"
//                    ]
//                }
//            }
//        }
//    }
}

dependencies {
    implementation(project(":room:room-common"))
    implementation(project(":room:room-runtime"))
    implementation(projectOrArtifact(":arch:core:core-runtime"))
    implementation(projectOrArtifact(":lifecycle:lifecycle-livedata"))
    implementation(projectOrArtifact(":lifecycle:lifecycle-runtime"))
    implementation(libs.multidex)

    // Workaround for b/191286558.
    implementation(project(":annotation:annotation-experimental"))

    // libs.findbugs dependency resolves an app/testapp version conflict.
    implementation(libs.findbugs)
    implementation("androidx.recyclerview:recyclerview:1.0.0")
    implementation("androidx.appcompat:appcompat:1.0.0")
    // use the shadowed dependency in tests so that if the shadowing does not work properly,
    // our tests fail.
    annotationProcessor project(path: ":room:room-compiler",
            configuration: "shadowAndImplementation")
    androidTestAnnotationProcessor project(path: ":room:room-compiler",
            configuration: "shadowAndImplementation")

    androidTestImplementation(project(":room:room-testing"))
    androidTestImplementation(project(":room:room-rxjava2"))
    androidTestImplementation(project(":room:room-rxjava3"))
    androidTestImplementation(project(":room:room-guava"))
    androidTestImplementation(project(":room:room-paging"))
    androidTestImplementation("androidx.arch.core:core-testing:2.0.1")
    androidTestImplementation(projectOrArtifact(":paging:paging-runtime"))
    androidTestImplementation(projectOrArtifact(":lifecycle:lifecycle-runtime"))
    androidTestImplementation(projectOrArtifact(":lifecycle:lifecycle-runtime-testing"))
    androidTestImplementation(projectOrArtifact(":lifecycle:lifecycle-livedata"))

    // libs.findbugs dependency resolves an app/testapp version conflict.
    androidTestImplementation(libs.findbugs)
    androidTestImplementation(libs.guavaAndroid)
    androidTestImplementation(libs.rxjava2)
    androidTestImplementation(libs.rxjava3)
    androidTestImplementation(libs.testExtJunit)
    androidTestImplementation(libs.testCore)
    androidTestImplementation(libs.testRunner)
    androidTestImplementation(libs.testRules)
    androidTestImplementation(libs.espressoCore)
    androidTestImplementation(libs.truth)
    androidTestImplementation(libs.mockitoCore, excludes.bytebuddy) // DexMaker has it's own MockMaker
    androidTestImplementation(libs.dexmakerMockito, excludes.bytebuddy) // DexMaker has it's own MockMaker
    androidTestImplementation(project(":internal-testutils-truth"))


    testImplementation(libs.junit)
}
