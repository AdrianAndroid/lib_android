// Baseline format: 1.0
AcronymName: androidx.work.Operation.State.FAILURE:
    Acronyms should not be capitalized in class names: was `FAILURE`, should this be `Failure`?
AcronymName: androidx.work.Operation.State.IN_PROGRESS:
    Acronyms should not be capitalized in class names: was `IN_PROGRESS`, should this be `InProgress`?
AcronymName: androidx.work.Operation.State.SUCCESS:
    Acronyms should not be capitalized in class names: was `SUCCESS`, should this be `Success`?


BuilderSetStyle: androidx.work.Data.Builder#putAll(androidx.work.Data):
    Builder methods names should use setFoo() / addFoo() / clearFoo() style: method androidx.work.Data.Builder.putAll(androidx.work.Data)
BuilderSetStyle: androidx.work.Data.Builder#putAll(java.util.Map<java.lang.String,java.lang.Object>):
    Builder methods names should use setFoo() / addFoo() / clearFoo() style: method androidx.work.Data.Builder.putAll(java.util.Map<java.lang.String,java.lang.Object>)
BuilderSetStyle: androidx.work.Data.Builder#putBoolean(String, boolean):
    Builder methods names should use setFoo() / addFoo() / clearFoo() style: method androidx.work.Data.Builder.putBoolean(String,boolean)
BuilderSetStyle: androidx.work.Data.Builder#putBooleanArray(String, boolean[]):
    Builder methods names should use setFoo() / addFoo() / clearFoo() style: method androidx.work.Data.Builder.putBooleanArray(String,boolean[])
BuilderSetStyle: androidx.work.Data.Builder#putByte(String, byte):
    Builder methods names should use setFoo() / addFoo() / clearFoo() style: method androidx.work.Data.Builder.putByte(String,byte)
BuilderSetStyle: androidx.work.Data.Builder#putByteArray(String, byte[]):
    Builder methods names should use setFoo() / addFoo() / clearFoo() style: method androidx.work.Data.Builder.putByteArray(String,byte[])
BuilderSetStyle: androidx.work.Data.Builder#putDouble(String, double):
    Builder methods names should use setFoo() / addFoo() / clearFoo() style: method androidx.work.Data.Builder.putDouble(String,double)
BuilderSetStyle: androidx.work.Data.Builder#putDoubleArray(String, double[]):
    Builder methods names should use setFoo() / addFoo() / clearFoo() style: method androidx.work.Data.Builder.putDoubleArray(String,double[])
BuilderSetStyle: androidx.work.Data.Builder#putFloat(String, float):
    Builder methods names should use setFoo() / addFoo() / clearFoo() style: method androidx.work.Data.Builder.putFloat(String,float)
BuilderSetStyle: androidx.work.Data.Builder#putFloatArray(String, float[]):
    Builder methods names should use setFoo() / addFoo() / clearFoo() style: method androidx.work.Data.Builder.putFloatArray(String,float[])
BuilderSetStyle: androidx.work.Data.Builder#putInt(String, int):
    Builder methods names should use setFoo() / addFoo() / clearFoo() style: method androidx.work.Data.Builder.putInt(String,int)
BuilderSetStyle: androidx.work.Data.Builder#putIntArray(String, int[]):
    Builder methods names should use setFoo() / addFoo() / clearFoo() style: method androidx.work.Data.Builder.putIntArray(String,int[])
BuilderSetStyle: androidx.work.Data.Builder#putLong(String, long):
    Builder methods names should use setFoo() / addFoo() / clearFoo() style: method androidx.work.Data.Builder.putLong(String,long)
BuilderSetStyle: androidx.work.Data.Builder#putLongArray(String, long[]):
    Builder methods names should use setFoo() / addFoo() / clearFoo() style: method androidx.work.Data.Builder.putLongArray(String,long[])
BuilderSetStyle: androidx.work.Data.Builder#putString(String, String):
    Builder methods names should use setFoo() / addFoo() / clearFoo() style: method androidx.work.Data.Builder.putString(String,String)
BuilderSetStyle: androidx.work.Data.Builder#putStringArray(String, String[]):
    Builder methods names should use setFoo() / addFoo() / clearFoo() style: method androidx.work.Data.Builder.putStringArray(String,String[])
BuilderSetStyle: androidx.work.WorkRequest.Builder#keepResultsForAtLeast(java.time.Duration):
    Builder methods names should use setFoo() / addFoo() / clearFoo() style: method androidx.work.WorkRequest.Builder.keepResultsForAtLeast(java.time.Duration)
BuilderSetStyle: androidx.work.WorkRequest.Builder#keepResultsForAtLeast(long, java.util.concurrent.TimeUnit):
    Builder methods names should use setFoo() / addFoo() / clearFoo() style: method androidx.work.WorkRequest.Builder.keepResultsForAtLeast(long,java.util.concurrent.TimeUnit)


MissingGetterMatchingBuilder: androidx.work.Configuration.Builder#setJobSchedulerJobIdRange(int, int):
    androidx.work.Configuration does not declare a `getJobSchedulerJobIdRange()` method matching method androidx.work.Configuration.Builder.setJobSchedulerJobIdRange(int,int)
MissingGetterMatchingBuilder: androidx.work.Configuration.Builder#setMaxSchedulerLimit(int):
    androidx.work.Configuration does not declare a `getMaxSchedulerLimit()` method matching method androidx.work.Configuration.Builder.setMaxSchedulerLimit(int)
MissingGetterMatchingBuilder: androidx.work.Configuration.Builder#setMinimumLoggingLevel(int):
    androidx.work.Configuration does not declare a `getMinimumLoggingLevel()` method matching method androidx.work.Configuration.Builder.setMinimumLoggingLevel(int)
MissingGetterMatchingBuilder: androidx.work.Constraints.Builder#addContentUriTrigger(android.net.Uri, boolean):
    androidx.work.Constraints does not declare a `getContentUriTriggers()` method matching method androidx.work.Constraints.Builder.addContentUriTrigger(android.net.Uri,boolean)
MissingGetterMatchingBuilder: androidx.work.Constraints.Builder#setRequiresBatteryNotLow(boolean):
    androidx.work.Constraints does not declare a `isRequiresBatteryNotLow()` method matching method androidx.work.Constraints.Builder.setRequiresBatteryNotLow(boolean)
MissingGetterMatchingBuilder: androidx.work.Constraints.Builder#setRequiresCharging(boolean):
    androidx.work.Constraints does not declare a `isRequiresCharging()` method matching method androidx.work.Constraints.Builder.setRequiresCharging(boolean)
MissingGetterMatchingBuilder: androidx.work.Constraints.Builder#setRequiresDeviceIdle(boolean):
    androidx.work.Constraints does not declare a `isRequiresDeviceIdle()` method matching method androidx.work.Constraints.Builder.setRequiresDeviceIdle(boolean)
MissingGetterMatchingBuilder: androidx.work.Constraints.Builder#setRequiresStorageNotLow(boolean):
    androidx.work.Constraints does not declare a `isRequiresStorageNotLow()` method matching method androidx.work.Constraints.Builder.setRequiresStorageNotLow(boolean)
MissingGetterMatchingBuilder: androidx.work.Constraints.Builder#setTriggerContentMaxDelay(java.time.Duration):
    androidx.work.Constraints does not declare a `getTriggerContentMaxDelay()` method matching method androidx.work.Constraints.Builder.setTriggerContentMaxDelay(java.time.Duration)
MissingGetterMatchingBuilder: androidx.work.Constraints.Builder#setTriggerContentMaxDelay(long, java.util.concurrent.TimeUnit):
    androidx.work.Constraints does not declare a `getTriggerContentMaxDelay()` method matching method androidx.work.Constraints.Builder.setTriggerContentMaxDelay(long,java.util.concurrent.TimeUnit)
MissingGetterMatchingBuilder: androidx.work.Constraints.Builder#setTriggerContentUpdateDelay(java.time.Duration):
    androidx.work.Constraints does not declare a `getTriggerContentUpdateDelay()` method matching method androidx.work.Constraints.Builder.setTriggerContentUpdateDelay(java.time.Duration)
MissingGetterMatchingBuilder: androidx.work.Constraints.Builder#setTriggerContentUpdateDelay(long, java.util.concurrent.TimeUnit):
    androidx.work.Constraints does not declare a `getTriggerContentUpdateDelay()` method matching method androidx.work.Constraints.Builder.setTriggerContentUpdateDelay(long,java.util.concurrent.TimeUnit)
MissingGetterMatchingBuilder: androidx.work.WorkRequest.Builder#addTag(String):
    W does not declare a `getTags()` method matching method androidx.work.WorkRequest.Builder.addTag(String)
MissingGetterMatchingBuilder: androidx.work.WorkRequest.Builder#setBackoffCriteria(androidx.work.BackoffPolicy, java.time.Duration):
    W does not declare a `getBackoffCriteria()` method matching method androidx.work.WorkRequest.Builder.setBackoffCriteria(androidx.work.BackoffPolicy,java.time.Duration)
MissingGetterMatchingBuilder: androidx.work.WorkRequest.Builder#setBackoffCriteria(androidx.work.BackoffPolicy, long, java.util.concurrent.TimeUnit):
    W does not declare a `getBackoffCriteria()` method matching method androidx.work.WorkRequest.Builder.setBackoffCriteria(androidx.work.BackoffPolicy,long,java.util.concurrent.TimeUnit)
MissingGetterMatchingBuilder: androidx.work.WorkRequest.Builder#setConstraints(androidx.work.Constraints):
    W does not declare a `getConstraints()` method matching method androidx.work.WorkRequest.Builder.setConstraints(androidx.work.Constraints)
MissingGetterMatchingBuilder: androidx.work.WorkRequest.Builder#setInitialDelay(java.time.Duration):
    W does not declare a `getInitialDelay()` method matching method androidx.work.WorkRequest.Builder.setInitialDelay(java.time.Duration)
MissingGetterMatchingBuilder: androidx.work.WorkRequest.Builder#setInitialDelay(long, java.util.concurrent.TimeUnit):
    W does not declare a `getInitialDelay()` method matching method androidx.work.WorkRequest.Builder.setInitialDelay(long,java.util.concurrent.TimeUnit)
MissingGetterMatchingBuilder: androidx.work.WorkRequest.Builder#setInputData(androidx.work.Data):
    W does not declare a `getInputData()` method matching method androidx.work.WorkRequest.Builder.setInputData(androidx.work.Data)


MissingNullability: androidx.work.Constraints.Builder#setTriggerContentMaxDelay(java.time.Duration) parameter #0:
    Missing nullability on parameter `duration` in method `setTriggerContentMaxDelay`
MissingNullability: androidx.work.Constraints.Builder#setTriggerContentUpdateDelay(java.time.Duration) parameter #0:
    Missing nullability on parameter `duration` in method `setTriggerContentUpdateDelay`


NoByteOrShort: androidx.work.Data#getByte(String, byte):
    Should avoid odd sized primitives; use `int` instead of `byte` in method androidx.work.Data.getByte(String,byte)
NoByteOrShort: androidx.work.Data#getByte(String, byte) parameter #1:
    Should avoid odd sized primitives; use `int` instead of `byte` in parameter defaultValue in androidx.work.Data.getByte(String key, byte defaultValue)
NoByteOrShort: androidx.work.Data.Builder#putByte(String, byte) parameter #1:
    Should avoid odd sized primitives; use `int` instead of `byte` in parameter value in androidx.work.Data.Builder.putByte(String key, byte value)


NullableCollection: androidx.work.Data#getStringArray(String):
    Return type of method androidx.work.Data.getStringArray(String) is a nullable collection (`java.lang.String[]`); must be non-null


StaticFinalBuilder: androidx.work.WorkRequest.Builder:
    Builder must be final: androidx.work.WorkRequest.Builder
