<?xml version="1.0" encoding="UTF-8"?>
<issues format="6" by="lint 7.1.0-alpha02" type="baseline" client="cli" name="Lint" variant="all" version="7.1.0-alpha02">

    <issue
        id="NewApi"
        message="Call requires API level 18 (current min is 14): `android.os.HandlerThread#quitSafely`"
        errorLine1="        mHandlerThread.quitSafely();"
        errorLine2="                       ~~~~~~~~~~">
        <location
            file="src/androidTest/java/androidx/work/impl/workers/ConstraintTrackingWorkerTest.java"
            line="157"
            column="24"/>
    </issue>

    <issue
        id="NewApi"
        message="Call requires API level 24 (current min is 23): `getTriggeredContentAuthorities`"
        errorLine1="                sTriggeredContentAuthorities = getTriggeredContentAuthorities();"
        errorLine2="                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/androidTest/java/androidx/work/impl/background/systemjob/SystemJobServiceTest.java"
            line="304"
            column="48"/>
    </issue>

    <issue
        id="NewApi"
        message="Call requires API level 24 (current min is 23): `getTriggeredContentUris`"
        errorLine1="                sTriggeredContentUris = getTriggeredContentUris();"
        errorLine2="                                        ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/androidTest/java/androidx/work/impl/background/systemjob/SystemJobServiceTest.java"
            line="305"
            column="41"/>
    </issue>

    <issue
        id="NewApi"
        message="Call requires API level 28 (current min is 23): `getNetwork`"
        errorLine1="                sNetwork = getNetwork();"
        errorLine2="                           ~~~~~~~~~~">
        <location
            file="src/androidTest/java/androidx/work/impl/background/systemjob/SystemJobServiceTest.java"
            line="325"
            column="28"/>
    </issue>

    <issue
        id="NewApi"
        message="Call requires API level 24 (current min is 23): `addContentUriTrigger`"
        errorLine1="                                .addContentUriTrigger(testUri1, true)"
        errorLine2="                                 ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/androidTest/java/androidx/work/impl/WorkManagerImplTest.java"
            line="367"
            column="34"/>
    </issue>

    <issue
        id="NewApi"
        message="Call requires API level 24 (current min is 23): `addContentUriTrigger`"
        errorLine1="                                .addContentUriTrigger(testUri2, false)"
        errorLine2="                                 ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/androidTest/java/androidx/work/impl/WorkManagerImplTest.java"
            line="368"
            column="34"/>
    </issue>

    <issue
        id="NewApi"
        message="Call requires API level 24 (current min is 23): `getContentUriTriggers`"
        errorLine1="            assertThat(constraints.getContentUriTriggers(), is(new ContentUriTriggers()));"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/androidTest/java/androidx/work/impl/WorkManagerImplTest.java"
            line="391"
            column="36"/>
    </issue>

    <issue
        id="NewApi"
        message="Call requires API level 24 (current min is 23): `getContentUriTriggers`"
        errorLine1="        assertThat(constraints.getContentUriTriggers().size(), is(0));"
        errorLine2="                               ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/androidTest/java/androidx/work/impl/WorkManagerImplTest.java"
            line="401"
            column="32"/>
    </issue>

    <issue
        id="NewApi"
        message="Call requires API level 24 (current min is 14): `getTriggeredContentAuthorities`"
        errorLine1="        assertThat(worker.getTriggeredContentAuthorities(),"
        errorLine2="                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/androidTest/java/androidx/work/impl/WorkerWrapperTest.java"
            line="919"
            column="27"/>
    </issue>

    <issue
        id="NewApi"
        message="Call requires API level 24 (current min is 14): `getTriggeredContentUris`"
        errorLine1="        assertThat(worker.getTriggeredContentUris(),"
        errorLine2="                          ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/androidTest/java/androidx/work/impl/WorkerWrapperTest.java"
            line="921"
            column="27"/>
    </issue>

    <issue
        id="BanSynchronizedMethods"
        message="Use of synchronized methods is not recommended"
        errorLine1="                            @Override"
        errorLine2="                            ^">
        <location
            file="src/main/java/androidx/work/impl/utils/futures/AbstractFuture.java"
            line="226"
            column="29"/>
    </issue>

    <issue
        id="BanSynchronizedMethods"
        message="Use of synchronized methods is not recommended"
        errorLine1="    /**"
        errorLine2="    ^">
        <location
            file="src/main/java/androidx/work/Logger.java"
            line="41"
            column="5"/>
    </issue>

    <issue
        id="BanSynchronizedMethods"
        message="Use of synchronized methods is not recommended"
        errorLine1="    /**"
        errorLine2="    ^">
        <location
            file="src/main/java/androidx/work/Logger.java"
            line="65"
            column="5"/>
    </issue>

    <issue
        id="BanSynchronizedMethods"
        message="Use of synchronized methods is not recommended"
        errorLine1="    /**"
        errorLine2="    ^">
        <location
            file="src/main/java/androidx/work/impl/constraints/trackers/Trackers.java"
            line="34"
            column="5"/>
    </issue>

    <issue
        id="BanSynchronizedMethods"
        message="Use of synchronized methods is not recommended"
        errorLine1="    /**"
        errorLine2="    ^">
        <location
            file="src/main/java/androidx/work/impl/constraints/trackers/Trackers.java"
            line="48"
            column="5"/>
    </issue>

    <issue
        id="BanSynchronizedMethods"
        message="Use of synchronized methods is not recommended"
        errorLine1="    @VisibleForTesting"
        errorLine2="    ^">
        <location
            file="src/main/java/androidx/work/impl/utils/WorkTimer.java"
            line="123"
            column="5"/>
    </issue>

    <issue
        id="BanSynchronizedMethods"
        message="Use of synchronized methods is not recommended"
        errorLine1="    @VisibleForTesting"
        errorLine2="    ^">
        <location
            file="src/main/java/androidx/work/impl/utils/WorkTimer.java"
            line="129"
            column="5"/>
    </issue>

    <issue
        id="ClassVerificationFailure"
        message="This call references a method added in API level 19; however, the containing class androidx.work.impl.background.systemalarm.Alarms is reachable from earlier API levels and will fail run-time class verification."
        errorLine1="                alarmManager.setExact(RTC_WAKEUP, triggerAtMillis, pendingIntent);"
        errorLine2="                             ~~~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/background/systemalarm/Alarms.java"
            line="128"
            column="30"/>
    </issue>

    <issue
        id="ClassVerificationFailure"
        message="This call references a method added in API level 26; however, the containing class androidx.work.Constraints.Builder is reachable from earlier API levels and will fail run-time class verification."
        errorLine1="            mTriggerContentUpdateDelay = duration.toMillis();"
        errorLine2="                                                  ~~~~~~~~">
        <location
            file="src/main/java/androidx/work/Constraints.java"
            line="408"
            column="51"/>
    </issue>

    <issue
        id="ClassVerificationFailure"
        message="This call references a method added in API level 26; however, the containing class androidx.work.Constraints.Builder is reachable from earlier API levels and will fail run-time class verification."
        errorLine1="            mTriggerContentMaxDelay = duration.toMillis();"
        errorLine2="                                               ~~~~~~~~">
        <location
            file="src/main/java/androidx/work/Constraints.java"
            line="443"
            column="48"/>
    </issue>

    <issue
        id="ClassVerificationFailure"
        message="This call references a method added in API level 19; however, the containing class androidx.work.impl.utils.ForceStopRunnable is reachable from earlier API levels and will fail run-time class verification."
        errorLine1="                alarmManager.setExact(RTC_WAKEUP, triggerAt, pendingIntent);"
        errorLine2="                             ~~~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/utils/ForceStopRunnable.java"
            line="303"
            column="30"/>
    </issue>

    <issue
        id="ClassVerificationFailure"
        message="This call references a method added in API level 24; however, the containing class androidx.work.impl.constraints.trackers.NetworkStateTracker is reachable from earlier API levels and will fail run-time class verification."
        errorLine1="                mConnectivityManager.registerDefaultNetworkCallback(mNetworkCallback);"
        errorLine2="                                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/constraints/trackers/NetworkStateTracker.java"
            line="89"
            column="38"/>
    </issue>

    <issue
        id="ClassVerificationFailure"
        message="This call references a method added in API level 21; however, the containing class androidx.work.impl.constraints.trackers.NetworkStateTracker is reachable from earlier API levels and will fail run-time class verification."
        errorLine1="                mConnectivityManager.unregisterNetworkCallback(mNetworkCallback);"
        errorLine2="                                     ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/constraints/trackers/NetworkStateTracker.java"
            line="112"
            column="38"/>
    </issue>

    <issue
        id="ClassVerificationFailure"
        message="This call references a method added in API level 23; however, the containing class androidx.work.impl.constraints.trackers.NetworkStateTracker is reachable from earlier API levels and will fail run-time class verification."
        errorLine1="            Network network = mConnectivityManager.getActiveNetwork();"
        errorLine2="                                                   ~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/constraints/trackers/NetworkStateTracker.java"
            line="151"
            column="52"/>
    </issue>

    <issue
        id="ClassVerificationFailure"
        message="This call references a method added in API level 21; however, the containing class androidx.work.impl.constraints.trackers.NetworkStateTracker is reachable from earlier API levels and will fail run-time class verification."
        errorLine1="            NetworkCapabilities capabilities = mConnectivityManager.getNetworkCapabilities(network);"
        errorLine2="                                                                    ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/constraints/trackers/NetworkStateTracker.java"
            line="152"
            column="69"/>
    </issue>

    <issue
        id="ClassVerificationFailure"
        message="This call references a method added in API level 21; however, the containing class androidx.work.impl.constraints.trackers.NetworkStateTracker is reachable from earlier API levels and will fail run-time class verification."
        errorLine1="                    &amp;&amp; capabilities.hasCapability(NetworkCapabilities.NET_CAPABILITY_VALIDATED);"
        errorLine2="                                    ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/constraints/trackers/NetworkStateTracker.java"
            line="154"
            column="37"/>
    </issue>

    <issue
        id="ClassVerificationFailure"
        message="This call references a method added in API level 26; however, the containing class androidx.work.PeriodicWorkRequest.Builder is reachable from earlier API levels and will fail run-time class verification."
        errorLine1="            mWorkSpec.setPeriodic(repeatInterval.toMillis());"
        errorLine2="                                                 ~~~~~~~~">
        <location
            file="src/main/java/androidx/work/PeriodicWorkRequest.java"
            line="118"
            column="50"/>
    </issue>

    <issue
        id="ClassVerificationFailure"
        message="This call references a method added in API level 26; however, the containing class androidx.work.PeriodicWorkRequest.Builder is reachable from earlier API levels and will fail run-time class verification."
        errorLine1="            mWorkSpec.setPeriodic(repeatInterval.toMillis(), flexInterval.toMillis());"
        errorLine2="                                                 ~~~~~~~~">
        <location
            file="src/main/java/androidx/work/PeriodicWorkRequest.java"
            line="181"
            column="50"/>
    </issue>

    <issue
        id="ClassVerificationFailure"
        message="This call references a method added in API level 26; however, the containing class androidx.work.PeriodicWorkRequest.Builder is reachable from earlier API levels and will fail run-time class verification."
        errorLine1="            mWorkSpec.setPeriodic(repeatInterval.toMillis(), flexInterval.toMillis());"
        errorLine2="                                                                          ~~~~~~~~">
        <location
            file="src/main/java/androidx/work/PeriodicWorkRequest.java"
            line="181"
            column="75"/>
    </issue>

    <issue
        id="ClassVerificationFailure"
        message="This call references a method added in API level 28; however, the containing class androidx.work.impl.utils.ProcessUtils is reachable from earlier API levels and will fail run-time class verification."
        errorLine1="            return Application.getProcessName();"
        errorLine2="                               ~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/utils/ProcessUtils.java"
            line="77"
            column="32"/>
    </issue>

    <issue
        id="ClassVerificationFailure"
        message="This call references a method added in API level 29; however, the containing class null is reachable from earlier API levels and will fail run-time class verification."
        errorLine1="                    startForeground(notificationId, notification, notificationType);"
        errorLine2="                    ~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/foreground/SystemForegroundService.java"
            line="124"
            column="21"/>
    </issue>

    <issue
        id="ClassVerificationFailure"
        message="This call references a method added in API level 28; however, the containing class androidx.work.impl.background.systemjob.SystemJobInfoConverter is reachable from earlier API levels and will fail run-time class verification."
        errorLine1="                builder.setImportantWhileForeground(true);"
        errorLine2="                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/background/systemjob/SystemJobInfoConverter.java"
            line="104"
            column="25"/>
    </issue>

    <issue
        id="ClassVerificationFailure"
        message="This call references a method added in API level 24; however, the containing class androidx.work.impl.background.systemjob.SystemJobInfoConverter is reachable from earlier API levels and will fail run-time class verification."
        errorLine1="                builder.addTriggerContentUri(convertContentUriTrigger(trigger));"
        errorLine2="                        ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/background/systemjob/SystemJobInfoConverter.java"
            line="111"
            column="25"/>
    </issue>

    <issue
        id="ClassVerificationFailure"
        message="This call references a method added in API level 24; however, the containing class androidx.work.impl.background.systemjob.SystemJobInfoConverter is reachable from earlier API levels and will fail run-time class verification."
        errorLine1="            builder.setTriggerContentUpdateDelay(constraints.getTriggerContentUpdateDelay());"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/background/systemjob/SystemJobInfoConverter.java"
            line="113"
            column="21"/>
    </issue>

    <issue
        id="ClassVerificationFailure"
        message="This call references a method added in API level 24; however, the containing class androidx.work.impl.background.systemjob.SystemJobInfoConverter is reachable from earlier API levels and will fail run-time class verification."
        errorLine1="            builder.setTriggerContentMaxDelay(constraints.getTriggerMaxContentDelay());"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/background/systemjob/SystemJobInfoConverter.java"
            line="114"
            column="21"/>
    </issue>

    <issue
        id="ClassVerificationFailure"
        message="This call references a method added in API level 26; however, the containing class androidx.work.impl.background.systemjob.SystemJobInfoConverter is reachable from earlier API levels and will fail run-time class verification."
        errorLine1="            builder.setRequiresBatteryNotLow(constraints.requiresBatteryNotLow());"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/background/systemjob/SystemJobInfoConverter.java"
            line="121"
            column="21"/>
    </issue>

    <issue
        id="ClassVerificationFailure"
        message="This call references a method added in API level 26; however, the containing class androidx.work.impl.background.systemjob.SystemJobInfoConverter is reachable from earlier API levels and will fail run-time class verification."
        errorLine1="            builder.setRequiresStorageNotLow(constraints.requiresStorageNotLow());"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/background/systemjob/SystemJobInfoConverter.java"
            line="122"
            column="21"/>
    </issue>

    <issue
        id="ClassVerificationFailure"
        message="This call references a method added in API level 24; however, the containing class androidx.work.impl.background.systemjob.SystemJobInfoConverter is reachable from earlier API levels and will fail run-time class verification."
        errorLine1="        return new JobInfo.TriggerContentUri(trigger.getUri(), flag);"
        errorLine2="               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/background/systemjob/SystemJobInfoConverter.java"
            line="132"
            column="16"/>
    </issue>

    <issue
        id="ClassVerificationFailure"
        message="This call references a method added in API level 28; however, the containing class androidx.work.impl.background.systemjob.SystemJobInfoConverter is reachable from earlier API levels and will fail run-time class verification."
        errorLine1="            builder.setRequiredNetwork(networkRequest);"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/background/systemjob/SystemJobInfoConverter.java"
            line="150"
            column="21"/>
    </issue>

    <issue
        id="ClassVerificationFailure"
        message="This call references a method added in API level 24; however, the containing class androidx.work.impl.background.systemjob.SystemJobService is reachable from earlier API levels and will fail run-time class verification."
        errorLine1="            if (params.getTriggeredContentUris() != null) {"
        errorLine2="                       ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/background/systemjob/SystemJobService.java"
            line="125"
            column="24"/>
    </issue>

    <issue
        id="ClassVerificationFailure"
        message="This call references a method added in API level 24; however, the containing class androidx.work.impl.background.systemjob.SystemJobService is reachable from earlier API levels and will fail run-time class verification."
        errorLine1="                        Arrays.asList(params.getTriggeredContentUris());"
        errorLine2="                                             ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/background/systemjob/SystemJobService.java"
            line="127"
            column="46"/>
    </issue>

    <issue
        id="ClassVerificationFailure"
        message="This call references a method added in API level 24; however, the containing class androidx.work.impl.background.systemjob.SystemJobService is reachable from earlier API levels and will fail run-time class verification."
        errorLine1="            if (params.getTriggeredContentAuthorities() != null) {"
        errorLine2="                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/background/systemjob/SystemJobService.java"
            line="129"
            column="24"/>
    </issue>

    <issue
        id="ClassVerificationFailure"
        message="This call references a method added in API level 24; however, the containing class androidx.work.impl.background.systemjob.SystemJobService is reachable from earlier API levels and will fail run-time class verification."
        errorLine1="                        Arrays.asList(params.getTriggeredContentAuthorities());"
        errorLine2="                                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/background/systemjob/SystemJobService.java"
            line="131"
            column="46"/>
    </issue>

    <issue
        id="ClassVerificationFailure"
        message="This call references a method added in API level 28; however, the containing class androidx.work.impl.background.systemjob.SystemJobService is reachable from earlier API levels and will fail run-time class verification."
        errorLine1="                runtimeExtras.network = params.getNetwork();"
        errorLine2="                                               ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/background/systemjob/SystemJobService.java"
            line="134"
            column="48"/>
    </issue>

    <issue
        id="ClassVerificationFailure"
        message="This call references a method added in API level 21; however, the containing class androidx.work.impl.WorkDatabasePathHelper is reachable from earlier API levels and will fail run-time class verification."
        errorLine1="        return new File(context.getNoBackupFilesDir(), filePath);"
        errorLine2="                                ~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/WorkDatabasePathHelper.java"
            line="145"
            column="33"/>
    </issue>

    <issue
        id="ClassVerificationFailure"
        message="This call references a method added in API level 24; however, the containing class androidx.work.impl.WorkManagerImpl is reachable from earlier API levels and will fail run-time class verification."
        errorLine1="        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.N &amp;&amp; context.isDeviceProtectedStorage()) {"
        errorLine2="                                                                      ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/WorkManagerImpl.java"
            line="761"
            column="71"/>
    </issue>

    <issue
        id="ClassVerificationFailure"
        message="This call references a method added in API level 26; however, the containing class androidx.work.WorkRequest.Builder is reachable from earlier API levels and will fail run-time class verification."
        errorLine1="            mWorkSpec.setBackoffDelayDuration(duration.toMillis());"
        errorLine2="                                                       ~~~~~~~~">
        <location
            file="src/main/java/androidx/work/WorkRequest.java"
            line="174"
            column="56"/>
    </issue>

    <issue
        id="ClassVerificationFailure"
        message="This call references a method added in API level 26; however, the containing class androidx.work.WorkRequest.Builder is reachable from earlier API levels and will fail run-time class verification."
        errorLine1="            mWorkSpec.minimumRetentionDuration = duration.toMillis();"
        errorLine2="                                                          ~~~~~~~~">
        <location
            file="src/main/java/androidx/work/WorkRequest.java"
            line="251"
            column="59"/>
    </issue>

    <issue
        id="ClassVerificationFailure"
        message="This call references a method added in API level 26; however, the containing class androidx.work.WorkRequest.Builder is reachable from earlier API levels and will fail run-time class verification."
        errorLine1="            mWorkSpec.initialDelay = duration.toMillis();"
        errorLine2="                                              ~~~~~~~~">
        <location
            file="src/main/java/androidx/work/WorkRequest.java"
            line="283"
            column="47"/>
    </issue>

    <issue
        id="KotlinPropertyAccess"
        message="This method should be called `getState` such that `state` can be accessed as a property from Kotlin; see https://android.github.io/kotlin-guides/interop.html#property-prefixes"
        errorLine1="    public abstract T getInitialState();"
        errorLine2="                      ~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/constraints/trackers/ConstraintTracker.java"
            line="124"
            column="23"/>
    </issue>

    <issue
        id="KotlinPropertyAccess"
        message="This method should be called `getRequiresCharging` such that `requiresCharging` can be accessed as a property from Kotlin; see https://android.github.io/kotlin-guides/interop.html#property-prefixes"
        errorLine1="    public boolean requiresCharging() {"
        errorLine2="                   ~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/work/Constraints.java"
            line="120"
            column="20"/>
    </issue>

    <issue
        id="KotlinPropertyAccess"
        message="This method should be called `getRequiresDeviceIdle` such that `requiresDeviceIdle` can be accessed as a property from Kotlin; see https://android.github.io/kotlin-guides/interop.html#property-prefixes"
        errorLine1="    public boolean requiresDeviceIdle() {"
        errorLine2="                   ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/work/Constraints.java"
            line="137"
            column="20"/>
    </issue>

    <issue
        id="KotlinPropertyAccess"
        message="This method should be called `getRequiresBatteryNotLow` such that `requiresBatteryNotLow` can be accessed as a property from Kotlin; see https://android.github.io/kotlin-guides/interop.html#property-prefixes"
        errorLine1="    public boolean requiresBatteryNotLow() {"
        errorLine2="                   ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/work/Constraints.java"
            line="154"
            column="20"/>
    </issue>

    <issue
        id="KotlinPropertyAccess"
        message="This method should be called `getRequiresStorageNotLow` such that `requiresStorageNotLow` can be accessed as a property from Kotlin; see https://android.github.io/kotlin-guides/interop.html#property-prefixes"
        errorLine1="    public boolean requiresStorageNotLow() {"
        errorLine2="                   ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/work/Constraints.java"
            line="170"
            column="20"/>
    </issue>

    <issue
        id="KotlinPropertyAccess"
        message="The getter return type (`LiveData&lt;State>`) and setter parameter type (`State`) getter and setter methods for property `state` should have exactly the same type to allow be accessed as a property from Kotlin; see https://android.github.io/kotlin-guides/interop.html#property-prefixes"
        errorLine1="    public @NonNull LiveData&lt;State> getState() {"
        errorLine2="                                    ~~~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/OperationImpl.java"
            line="52"
            column="37"/>
        <location
            file="src/main/java/androidx/work/impl/OperationImpl.java"
            line="61"
            column="17"
            message="Setter here"/>
    </issue>

    <issue
        id="KotlinPropertyAccess"
        message="The getter return type (`boolean`) and setter parameter type (`long`) getter and setter methods for property `periodic` should have exactly the same type to allow be accessed as a property from Kotlin; see https://android.github.io/kotlin-guides/interop.html#property-prefixes"
        errorLine1="    public boolean isPeriodic() {"
        errorLine2="                   ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/model/WorkSpec.java"
            line="178"
            column="20"/>
        <location
            file="src/main/java/androidx/work/impl/model/WorkSpec.java"
            line="191"
            column="17"
            message="Setter here"/>
    </issue>

    <issue
        id="LambdaLast"
        message="Functional interface parameters (such as parameter 2, &quot;mappingMethod&quot;, in androidx.work.impl.utils.LiveDataUtils.dedupedMappedLiveDataFor) should be last to improve Kotlin interoperability; see https://kotlinlang.org/docs/reference/java-interop.html#sam-conversions"
        errorLine1="            @NonNull final TaskExecutor workTaskExecutor) {"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/utils/LiveDataUtils.java"
            line="54"
            column="13"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public final V get(long timeout, TimeUnit unit)"
        errorLine2="                                     ~~~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/utils/futures/AbstractFuture.java"
            line="355"
            column="38"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public final void addListener(Runnable listener, Executor executor) {"
        errorLine2="                                  ~~~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/utils/futures/AbstractFuture.java"
            line="650"
            column="35"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public final void addListener(Runnable listener, Executor executor) {"
        errorLine2="                                                     ~~~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/utils/futures/AbstractFuture.java"
            line="650"
            column="54"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    protected boolean setException(Throwable throwable) {"
        errorLine2="                                   ~~~~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/utils/futures/AbstractFuture.java"
            line="707"
            column="36"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    protected boolean setFuture(ListenableFuture&lt;? extends V> future) {"
        errorLine2="                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/utils/futures/AbstractFuture.java"
            line="743"
            column="33"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public BatteryChargingController(Context context, TaskExecutor taskExecutor) {"
        errorLine2="                                     ~~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/constraints/controllers/BatteryChargingController.java"
            line="30"
            column="38"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public BatteryChargingController(Context context, TaskExecutor taskExecutor) {"
        errorLine2="                                                      ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/constraints/controllers/BatteryChargingController.java"
            line="30"
            column="55"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public Boolean getInitialState() {"
        errorLine2="           ~~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/constraints/trackers/BatteryChargingTracker.java"
            line="48"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public IntentFilter getIntentFilter() {"
        errorLine2="           ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/constraints/trackers/BatteryChargingTracker.java"
            line="61"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void onBroadcastReceive(Context context, @NonNull Intent intent) {"
        errorLine2="                                   ~~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/constraints/trackers/BatteryChargingTracker.java"
            line="74"
            column="36"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public BatteryNotLowController(Context context, TaskExecutor taskExecutor) {"
        errorLine2="                                   ~~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/constraints/controllers/BatteryNotLowController.java"
            line="30"
            column="36"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public BatteryNotLowController(Context context, TaskExecutor taskExecutor) {"
        errorLine2="                                                    ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/constraints/controllers/BatteryNotLowController.java"
            line="30"
            column="53"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public Boolean getInitialState() {"
        errorLine2="           ~~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/constraints/trackers/BatteryNotLowTracker.java"
            line="58"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public IntentFilter getIntentFilter() {"
        errorLine2="           ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/constraints/trackers/BatteryNotLowTracker.java"
            line="78"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void onBroadcastReceive(Context context, @NonNull Intent intent) {"
        errorLine2="                                   ~~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/constraints/trackers/BatteryNotLowTracker.java"
            line="86"
            column="36"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public abstract void onBroadcastReceive(Context context, @NonNull Intent intent);"
        errorLine2="                                            ~~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/constraints/trackers/BroadcastReceiverConstraintTracker.java"
            line="61"
            column="45"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public abstract IntentFilter getIntentFilter();"
        errorLine2="                    ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/constraints/trackers/BroadcastReceiverConstraintTracker.java"
            line="66"
            column="21"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public Operation getOperation() {"
        errorLine2="           ~~~~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/utils/CancelWorkRunnable.java"
            line="54"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static CancelWorkRunnable forId("
        errorLine2="                  ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/utils/CancelWorkRunnable.java"
            line="113"
            column="19"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static CancelWorkRunnable forTag("
        errorLine2="                  ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/utils/CancelWorkRunnable.java"
            line="140"
            column="19"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static CancelWorkRunnable forName("
        errorLine2="                  ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/utils/CancelWorkRunnable.java"
            line="172"
            column="19"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static CancelWorkRunnable forAll(@NonNull final WorkManagerImpl workManagerImpl) {"
        errorLine2="                  ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/utils/CancelWorkRunnable.java"
            line="206"
            column="19"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static Intent newConstraintProxyUpdateIntent("
        errorLine2="                  ~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/background/systemalarm/ConstraintProxyUpdateReceiver.java"
            line="61"
            column="19"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="            Context context,"
        errorLine2="            ~~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/background/systemalarm/ConstraintProxyUpdateReceiver.java"
            line="62"
            column="13"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void addListener(ConstraintListener&lt;T> listener) {"
        errorLine2="                            ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/constraints/trackers/ConstraintTracker.java"
            line="63"
            column="29"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void removeListener(ConstraintListener&lt;T> listener) {"
        errorLine2="                               ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/constraints/trackers/ConstraintTracker.java"
            line="83"
            column="32"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public Builder setTriggerContentUpdateDelay(Duration duration) {"
        errorLine2="                                                    ~~~~~~~~">
        <location
            file="src/main/java/androidx/work/Constraints.java"
            line="407"
            column="53"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public Builder setTriggerContentMaxDelay(Duration duration) {"
        errorLine2="                                                 ~~~~~~~~">
        <location
            file="src/main/java/androidx/work/Constraints.java"
            line="442"
            column="50"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    void insertDependency(Dependency dependency);"
        errorLine2="                          ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/model/DependencyDao.java"
            line="38"
            column="27"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    boolean hasCompletedAllPrerequisites(String id);"
        errorLine2="                                         ~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/model/DependencyDao.java"
            line="49"
            column="42"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    List&lt;String> getPrerequisites(String id);"
        errorLine2="    ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/model/DependencyDao.java"
            line="58"
            column="5"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    List&lt;String> getPrerequisites(String id);"
        errorLine2="                                  ~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/model/DependencyDao.java"
            line="58"
            column="35"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    List&lt;String> getDependentWorkIds(String id);"
        errorLine2="    ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/model/DependencyDao.java"
            line="67"
            column="5"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    List&lt;String> getDependentWorkIds(String id);"
        errorLine2="                                     ~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/model/DependencyDao.java"
            line="67"
            column="38"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    boolean hasDependents(String id);"
        errorLine2="                          ~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/model/DependencyDao.java"
            line="76"
            column="27"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static InputMerger fromClassName(String className) {"
        errorLine2="                  ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/work/InputMerger.java"
            line="60"
            column="19"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static InputMerger fromClassName(String className) {"
        errorLine2="                                            ~~~~~~">
        <location
            file="src/main/java/androidx/work/InputMerger.java"
            line="60"
            column="45"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static &lt;In, Out> LiveData&lt;Out> dedupedMappedLiveDataFor("
        errorLine2="                            ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/utils/LiveDataUtils.java"
            line="51"
            column="29"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static synchronized void setLogger(Logger logger) {"
        errorLine2="                                              ~~~~~~">
        <location
            file="src/main/java/androidx/work/Logger.java"
            line="44"
            column="47"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static String tagWithPrefix(@NonNull String tag) {"
        errorLine2="                  ~~~~~~">
        <location
            file="src/main/java/androidx/work/Logger.java"
            line="52"
            column="19"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static synchronized Logger get() {"
        errorLine2="                               ~~~~~~">
        <location
            file="src/main/java/androidx/work/Logger.java"
            line="68"
            column="32"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public abstract void verbose(String tag, String message, Throwable... throwables);"
        errorLine2="                                 ~~~~~~">
        <location
            file="src/main/java/androidx/work/Logger.java"
            line="87"
            column="34"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public abstract void verbose(String tag, String message, Throwable... throwables);"
        errorLine2="                                             ~~~~~~">
        <location
            file="src/main/java/androidx/work/Logger.java"
            line="87"
            column="46"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public abstract void verbose(String tag, String message, Throwable... throwables);"
        errorLine2="                                                             ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/work/Logger.java"
            line="87"
            column="62"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public abstract void debug(String tag, String message, Throwable... throwables);"
        errorLine2="                               ~~~~~~">
        <location
            file="src/main/java/androidx/work/Logger.java"
            line="92"
            column="32"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public abstract void debug(String tag, String message, Throwable... throwables);"
        errorLine2="                                           ~~~~~~">
        <location
            file="src/main/java/androidx/work/Logger.java"
            line="92"
            column="44"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public abstract void debug(String tag, String message, Throwable... throwables);"
        errorLine2="                                                           ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/work/Logger.java"
            line="92"
            column="60"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public abstract void info(String tag, String message, Throwable... throwables);"
        errorLine2="                              ~~~~~~">
        <location
            file="src/main/java/androidx/work/Logger.java"
            line="97"
            column="31"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public abstract void info(String tag, String message, Throwable... throwables);"
        errorLine2="                                          ~~~~~~">
        <location
            file="src/main/java/androidx/work/Logger.java"
            line="97"
            column="43"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public abstract void info(String tag, String message, Throwable... throwables);"
        errorLine2="                                                          ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/work/Logger.java"
            line="97"
            column="59"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public abstract void warning(String tag, String message, Throwable... throwables);"
        errorLine2="                                 ~~~~~~">
        <location
            file="src/main/java/androidx/work/Logger.java"
            line="102"
            column="34"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public abstract void warning(String tag, String message, Throwable... throwables);"
        errorLine2="                                             ~~~~~~">
        <location
            file="src/main/java/androidx/work/Logger.java"
            line="102"
            column="46"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public abstract void warning(String tag, String message, Throwable... throwables);"
        errorLine2="                                                             ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/work/Logger.java"
            line="102"
            column="62"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public abstract void error(String tag, String message, Throwable... throwables);"
        errorLine2="                               ~~~~~~">
        <location
            file="src/main/java/androidx/work/Logger.java"
            line="107"
            column="32"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public abstract void error(String tag, String message, Throwable... throwables);"
        errorLine2="                                           ~~~~~~">
        <location
            file="src/main/java/androidx/work/Logger.java"
            line="107"
            column="44"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public abstract void error(String tag, String message, Throwable... throwables);"
        errorLine2="                                                           ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/work/Logger.java"
            line="107"
            column="60"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public void verbose(String tag, String message, Throwable... throwables) {"
        errorLine2="                            ~~~~~~">
        <location
            file="src/main/java/androidx/work/Logger.java"
            line="124"
            column="29"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public void verbose(String tag, String message, Throwable... throwables) {"
        errorLine2="                                        ~~~~~~">
        <location
            file="src/main/java/androidx/work/Logger.java"
            line="124"
            column="41"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public void verbose(String tag, String message, Throwable... throwables) {"
        errorLine2="                                                        ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/work/Logger.java"
            line="124"
            column="57"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public void debug(String tag, String message, Throwable... throwables) {"
        errorLine2="                          ~~~~~~">
        <location
            file="src/main/java/androidx/work/Logger.java"
            line="135"
            column="27"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public void debug(String tag, String message, Throwable... throwables) {"
        errorLine2="                                      ~~~~~~">
        <location
            file="src/main/java/androidx/work/Logger.java"
            line="135"
            column="39"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public void debug(String tag, String message, Throwable... throwables) {"
        errorLine2="                                                      ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/work/Logger.java"
            line="135"
            column="55"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public void info(String tag, String message, Throwable... throwables) {"
        errorLine2="                         ~~~~~~">
        <location
            file="src/main/java/androidx/work/Logger.java"
            line="146"
            column="26"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public void info(String tag, String message, Throwable... throwables) {"
        errorLine2="                                     ~~~~~~">
        <location
            file="src/main/java/androidx/work/Logger.java"
            line="146"
            column="38"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public void info(String tag, String message, Throwable... throwables) {"
        errorLine2="                                                     ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/work/Logger.java"
            line="146"
            column="54"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public void warning(String tag, String message, Throwable... throwables) {"
        errorLine2="                            ~~~~~~">
        <location
            file="src/main/java/androidx/work/Logger.java"
            line="157"
            column="29"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public void warning(String tag, String message, Throwable... throwables) {"
        errorLine2="                                        ~~~~~~">
        <location
            file="src/main/java/androidx/work/Logger.java"
            line="157"
            column="41"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public void warning(String tag, String message, Throwable... throwables) {"
        errorLine2="                                                        ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/work/Logger.java"
            line="157"
            column="57"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public void error(String tag, String message, Throwable... throwables) {"
        errorLine2="                          ~~~~~~">
        <location
            file="src/main/java/androidx/work/Logger.java"
            line="168"
            column="27"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public void error(String tag, String message, Throwable... throwables) {"
        errorLine2="                                      ~~~~~~">
        <location
            file="src/main/java/androidx/work/Logger.java"
            line="168"
            column="39"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public void error(String tag, String message, Throwable... throwables) {"
        errorLine2="                                                      ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/work/Logger.java"
            line="168"
            column="55"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public NetworkConnectedController(Context context, TaskExecutor taskExecutor) {"
        errorLine2="                                      ~~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/constraints/controllers/NetworkConnectedController.java"
            line="40"
            column="39"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public NetworkConnectedController(Context context, TaskExecutor taskExecutor) {"
        errorLine2="                                                       ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/constraints/controllers/NetworkConnectedController.java"
            line="40"
            column="56"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public NetworkMeteredController(Context context, TaskExecutor taskExecutor) {"
        errorLine2="                                    ~~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/constraints/controllers/NetworkMeteredController.java"
            line="38"
            column="37"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public NetworkMeteredController(Context context, TaskExecutor taskExecutor) {"
        errorLine2="                                                     ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/constraints/controllers/NetworkMeteredController.java"
            line="38"
            column="54"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public NetworkNotRoamingController(Context context, TaskExecutor taskExecutor) {"
        errorLine2="                                       ~~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/constraints/controllers/NetworkNotRoamingController.java"
            line="38"
            column="40"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public NetworkNotRoamingController(Context context, TaskExecutor taskExecutor) {"
        errorLine2="                                                        ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/constraints/controllers/NetworkNotRoamingController.java"
            line="38"
            column="57"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public NetworkState getInitialState() {"
        errorLine2="           ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/constraints/trackers/NetworkStateTracker.java"
            line="80"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static boolean isComponentExplicitlyEnabled(Context context, Class&lt;?> klazz) {"
        errorLine2="                                                       ~~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/utils/PackageManagerHelper.java"
            line="66"
            column="56"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static boolean isComponentExplicitlyEnabled(Context context, Class&lt;?> klazz) {"
        errorLine2="                                                                        ~~~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/utils/PackageManagerHelper.java"
            line="66"
            column="73"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static boolean isComponentExplicitlyEnabled(Context context, String className) {"
        errorLine2="                                                       ~~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/utils/PackageManagerHelper.java"
            line="77"
            column="56"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static boolean isComponentExplicitlyEnabled(Context context, String className) {"
        errorLine2="                                                                        ~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/utils/PackageManagerHelper.java"
            line="77"
            column="73"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public PruneWorkRunnable(WorkManagerImpl workManagerImpl) {"
        errorLine2="                             ~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/utils/PruneWorkRunnable.java"
            line="39"
            column="30"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public Operation getOperation() {"
        errorLine2="           ~~~~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/utils/PruneWorkRunnable.java"
            line="47"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void onReceive(Context context, Intent intent) {"
        errorLine2="                          ~~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/background/systemalarm/RescheduleReceiver.java"
            line="35"
            column="27"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void onReceive(Context context, Intent intent) {"
        errorLine2="                                           ~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/background/systemalarm/RescheduleReceiver.java"
            line="35"
            column="44"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="            List&lt;Scheduler> schedulers) {"
        errorLine2="            ~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/Schedulers.java"
            line="62"
            column="13"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static &lt;V> SettableFuture&lt;V> create() {"
        errorLine2="                      ~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/utils/futures/SettableFuture.java"
            line="45"
            column="23"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public boolean setException(Throwable throwable) {"
        errorLine2="                                ~~~~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/utils/futures/SettableFuture.java"
            line="55"
            column="33"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public boolean setFuture(ListenableFuture&lt;? extends V> future) {"
        errorLine2="                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/utils/futures/SettableFuture.java"
            line="60"
            column="30"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="            WorkManagerImpl workManagerImpl,"
        errorLine2="            ~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/utils/StartWorkRunnable.java"
            line="36"
            column="13"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="            String workSpecId,"
        errorLine2="            ~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/utils/StartWorkRunnable.java"
            line="37"
            column="13"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="            WorkerParameters.RuntimeExtras runtimeExtras) {"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/utils/StartWorkRunnable.java"
            line="38"
            column="13"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public Boolean getInitialState() {"
        errorLine2="           ~~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/constraints/trackers/StorageNotLowTracker.java"
            line="46"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public IntentFilter getIntentFilter() {"
        errorLine2="           ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/constraints/trackers/StorageNotLowTracker.java"
            line="70"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void onBroadcastReceive(Context context, @NonNull Intent intent) {"
        errorLine2="                                   ~~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/constraints/trackers/StorageNotLowTracker.java"
            line="81"
            column="36"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public int onStartCommand(Intent intent, int flags, int startId) {"
        errorLine2="                              ~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/background/systemalarm/SystemAlarmService.java"
            line="57"
            column="31"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="            Context context,"
        errorLine2="            ~~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/background/systemjob/SystemJobScheduler.java"
            line="77"
            column="13"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="            WorkManagerImpl workManager,"
        errorLine2="            ~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/background/systemjob/SystemJobScheduler.java"
            line="78"
            column="13"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="            JobScheduler jobScheduler,"
        errorLine2="            ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/background/systemjob/SystemJobScheduler.java"
            line="79"
            column="13"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="            SystemJobInfoConverter systemJobInfoConverter) {"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/background/systemjob/SystemJobScheduler.java"
            line="80"
            column="13"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void scheduleInternal(WorkSpec workSpec, int jobId) {"
        errorLine2="                                 ~~~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/background/systemjob/SystemJobScheduler.java"
            line="180"
            column="34"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    void postToMainThread(Runnable runnable);"
        errorLine2="                          ~~~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/utils/taskexecutor/TaskExecutor.java"
            line="35"
            column="27"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    Executor getMainThreadExecutor();"
        errorLine2="    ~~~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/utils/taskexecutor/TaskExecutor.java"
            line="40"
            column="5"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    void executeOnBackgroundThread(Runnable runnable);"
        errorLine2="                                   ~~~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/utils/taskexecutor/TaskExecutor.java"
            line="45"
            column="36"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    SerialExecutor getBackgroundExecutor();"
        errorLine2="    ~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/utils/taskexecutor/TaskExecutor.java"
            line="50"
            column="5"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static synchronized Trackers getInstance(Context context, TaskExecutor taskExecutor) {"
        errorLine2="                                                    ~~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/constraints/trackers/Trackers.java"
            line="41"
            column="53"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static synchronized Trackers getInstance(Context context, TaskExecutor taskExecutor) {"
        errorLine2="                                                                     ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/constraints/trackers/Trackers.java"
            line="41"
            column="70"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static PowerManager.WakeLock newWakeLock("
        errorLine2="                  ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/utils/WakeLocks.java"
            line="53"
            column="19"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public ExistingWorkPolicy getExistingWorkPolicy() {"
        errorLine2="           ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/WorkContinuationImpl.java"
            line="76"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public List&lt;String> getAllIds() {"
        errorLine2="           ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/WorkContinuationImpl.java"
            line="90"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public List&lt;WorkContinuationImpl> getParents() {"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/WorkContinuationImpl.java"
            line="105"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static Set&lt;String> prerequisitesFor(WorkContinuationImpl continuation) {"
        errorLine2="                                               ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/WorkContinuationImpl.java"
            line="276"
            column="48"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void postToMainThread(Runnable runnable) {"
        errorLine2="                                 ~~~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/utils/taskexecutor/WorkManagerTaskExecutor.java"
            line="53"
            column="34"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public Executor getMainThreadExecutor() {"
        errorLine2="           ~~~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/utils/taskexecutor/WorkManagerTaskExecutor.java"
            line="58"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void executeOnBackgroundThread(Runnable runnable) {"
        errorLine2="                                          ~~~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/utils/taskexecutor/WorkManagerTaskExecutor.java"
            line="63"
            column="43"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    void insert(WorkName workName);"
        errorLine2="                ~~~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/model/WorkNameDao.java"
            line="40"
            column="17"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    List&lt;String> getWorkSpecIdsWithName(String name);"
        errorLine2="    ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/model/WorkNameDao.java"
            line="49"
            column="5"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    List&lt;String> getWorkSpecIdsWithName(String name);"
        errorLine2="                                        ~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/model/WorkNameDao.java"
            line="49"
            column="41"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public String inputMergerClassName;"
        errorLine2="           ~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/model/WorkSpec.java"
            line="76"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public String id;"
        errorLine2="               ~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/model/WorkSpec.java"
            line="365"
            column="16"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public WorkInfo.State state;"
        errorLine2="               ~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/model/WorkSpec.java"
            line="368"
            column="16"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public String id;"
        errorLine2="               ~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/model/WorkSpec.java"
            line="395"
            column="16"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public WorkInfo.State state;"
        errorLine2="               ~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/model/WorkSpec.java"
            line="398"
            column="16"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public Data output;"
        errorLine2="               ~~~~">
        <location
            file="src/main/java/androidx/work/impl/model/WorkSpec.java"
            line="401"
            column="16"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public List&lt;String> tags;"
        errorLine2="               ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/model/WorkSpec.java"
            line="411"
            column="16"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public List&lt;Data> progress;"
        errorLine2="               ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/model/WorkSpec.java"
            line="420"
            column="16"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    void insert(WorkTag workTag);"
        errorLine2="                ~~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/model/WorkTagDao.java"
            line="39"
            column="17"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    List&lt;String> getWorkSpecIdsWithTag(String tag);"
        errorLine2="    ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/model/WorkTagDao.java"
            line="48"
            column="5"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    List&lt;String> getWorkSpecIdsWithTag(String tag);"
        errorLine2="                                       ~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/model/WorkTagDao.java"
            line="48"
            column="40"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    List&lt;String> getTagsForWorkSpecId(String id);"
        errorLine2="    ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/model/WorkTagDao.java"
            line="57"
            column="5"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    List&lt;String> getTagsForWorkSpecId(String id);"
        errorLine2="                                      ~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/model/WorkTagDao.java"
            line="57"
            column="39"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static int stateToInt(WorkInfo.State state) {"
        errorLine2="                                 ~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/model/WorkTypeConverters.java"
            line="90"
            column="34"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static WorkInfo.State intToState(int value) {"
        errorLine2="                  ~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/model/WorkTypeConverters.java"
            line="123"
            column="19"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static int backoffPolicyToInt(BackoffPolicy backoffPolicy) {"
        errorLine2="                                         ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/model/WorkTypeConverters.java"
            line="156"
            column="42"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static BackoffPolicy intToBackoffPolicy(int value) {"
        errorLine2="                  ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/model/WorkTypeConverters.java"
            line="177"
            column="19"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static int networkTypeToInt(NetworkType networkType) {"
        errorLine2="                                       ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/model/WorkTypeConverters.java"
            line="198"
            column="40"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static NetworkType intToNetworkType(int value) {"
        errorLine2="                  ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/model/WorkTypeConverters.java"
            line="233"
            column="19"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static byte[] contentUriTriggersToByteArray(ContentUriTriggers triggers) {"
        errorLine2="                  ~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/model/WorkTypeConverters.java"
            line="266"
            column="19"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static byte[] contentUriTriggersToByteArray(ContentUriTriggers triggers) {"
        errorLine2="                                                       ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/model/WorkTypeConverters.java"
            line="266"
            column="56"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static ContentUriTriggers byteArrayToContentUriTriggers(byte[] bytes) {"
        errorLine2="                  ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/model/WorkTypeConverters.java"
            line="305"
            column="19"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static ContentUriTriggers byteArrayToContentUriTriggers(byte[] bytes) {"
        errorLine2="                                                                   ~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/model/WorkTypeConverters.java"
            line="305"
            column="68"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public Network network;"
        errorLine2="               ~~~~~~~">
        <location
            file="src/main/java/androidx/work/WorkerParameters.java"
            line="216"
            column="16"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public WorkerWrapper build() {"
        errorLine2="               ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/work/impl/WorkerWrapper.java"
            line="684"
            column="16"/>
    </issue>

</issues>
